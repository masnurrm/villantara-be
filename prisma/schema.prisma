generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @db.Uuid
  nik        String?   @unique
  name       String
  phone      String?
  email      String   @unique
  password   String
  role       String
  status     String?
  access_token  String?
  village_id String?  @db.Uuid
  deleted    Boolean  @default(false)
  created_at DateTime @default(now())
  updated_at DateTime?
  deleted_at DateTime?

  village    Village? @relation(fields: [village_id], references: [id])
}

model Village {
  id          String    @id @db.Uuid
  name        String
  district    String
  city        String
  province    String
  latitude    Float
  longitude   Float
  total_area  Float?
  created_at  DateTime  @default(now())
  updated_at  DateTime?

  users           User[]
  recommendations Recommendation[]
  locations       Location[]
  transactions    Transaction[]
}

model Location {
  id            String    @id @db.Uuid
  village_id    String    @db.Uuid  // Foreign key to Village
  coords        Json?
  area          Float?
  plant_type    String?
  humidity      Float?
  soil_ph       Float?
  temperature   Float?
  business_unit String?
  created_at    DateTime  @default(now())
  updated_at    DateTime?

  village Village         @relation(fields: [village_id], references: [id])
  images  LocationImage[] // One location can have many images
}

model LocationImage {
  id          String @id @db.Uuid
  location_id String @db.Uuid  // Foreign key to Location
  url         String
  created_at  DateTime @default(now())

  location Location @relation(fields: [location_id], references: [id])
}

model Recommendation {
  id              String   @id @db.Uuid
  village_id      String   @db.Uuid  // Foreign key to Village
  carbon_captured Float?
  carbon_value    Float?
  insight         String?
  deleted         Boolean  @default(false)
  created_at      DateTime @default(now())
  updated_at      DateTime?
  deleted_at      DateTime?

  village Village @relation(fields: [village_id], references: [id])
}

model Transaction {
  id          String  @id @db.Uuid
  village_id  String  @db.Uuid
  name        String
  capacity    Float
  min_price   Int?
  max_price   Int?
  description String
  status      String
  type        String
  duration    Int?

  village Village @relation(fields: [village_id], references: [id])
}